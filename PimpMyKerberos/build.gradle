/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */
 
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}


def jettyVersion = "9.4.25.v20191220"


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile group: 'org.eclipse.jetty'          , name: 'jetty-server',                version: "${jettyVersion}"
    compile group: 'org.eclipse.jetty'          , name: 'jetty-webapp',                version: "${jettyVersion}"
    compile group: 'org.eclipse.jetty'          , name: 'jetty-servlet',               version: "${jettyVersion}"
    compile group: 'org.eclipse.jetty'          , name: 'jetty-util',                  version: "${jettyVersion}"
    
	compile group: 'org.eclipse.jetty'			, name: 'jetty-io', 				   version: "${jettyVersion}"
    
    compile group: 'org.eclipse.jetty.websocket', name: 'javax-websocket-server-impl', version: "${jettyVersion}"
    compile group: 'org.eclipse.jetty.http2'	, name: 'http2-server', 	  	       version: "${jettyVersion}"
    compile group: 'org.influxdb'				, name: 'influxdb-java', 			   version: "2.17"
    
    
    compile group: 'com.google.code.gson',       name: 'gson',                         version: '2.8.6'
    compile group: 'xstream',                    name: 'xstream',                      version: '1.2.2'
    compile group: 'org.yaml',                   name: 'snakeyaml',                    version: '1.21'
	compile group: 'log4j',                      name: 'log4j',                        version: '1.2.17'
	compile group: 'commons-io', 				 name: 'commons-io', 				   version: '2.6'
	compile group: 'org.apache.httpcomponents',  name: 'httpclient',                   version: '4.5.12'
	
	compile group: 'org.deeplearning4j', 		 name: 'deeplearning4j-ui', 		   version: '1.0.0-beta6'
	compile group: 'org.nd4j',                   name: 'nd4j-native-platform',         version : '1.0.0-beta6'
	
	

}

jar { 
   from sourceSets.main.output
   from sourceSets.main.allJava
}

task fatJar(type: Jar) {
   manifest {
    attributes(
      'Main-Class': 'pimpmykerberos.CoreLauncher',
    )
  }
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  } {
    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"
  }
  with jar
}

artifacts {
    archives fatJar
}